win_score = 'higher',
iter = 2000,
warmup = 500,
show_chain_messages = F,
seed=8484
)
load_all()
load_all()
m1 <- bpc(
data = test_btU,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
cluster = c('cluster'),
model_type = 'bt-U',
solve_ties = 'random',
win_score = 'higher',
iter = 2000,
warmup = 500,
show_chain_messages = F,
seed=8484
)
load_all()
m1 <- bpc(
data = test_btU,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
cluster = c('cluster'),
model_type = 'bt-U',
solve_ties = 'random',
win_score = 'higher',
iter = 2000,
warmup = 500,
show_chain_messages = F,
seed=8484
)
load_all()
m1 <- bpc(
data = test_btU,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
cluster = c('cluster'),
model_type = 'bt-U',
solve_ties = 'random',
win_score = 'higher',
iter = 2000,
warmup = 500,
show_chain_messages = F,
seed=8484
)
load_all()
m1 <- bpc(
data = test_btU,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
cluster = c('cluster'),
model_type = 'bt-U',
solve_ties = 'random',
win_score = 'higher',
iter = 2000,
warmup = 500,
show_chain_messages = F,
seed=8484
)
load_all()
m1 <- bpc(
data = test_btU,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
cluster = c('cluster'),
model_type = 'bt-U',
solve_ties = 'random',
win_score = 'higher',
iter = 2000,
warmup = 500,
show_chain_messages = F,
seed=8484
)
m1
m1$cluster_lookup_table
load_all()
m1
length <- length(NULL)
rm(length)
load_all()
m1
# Test sets for random effects
## code to prepare test datasets
test_btU<-tibble::tribble(~player0, ~player1, ~y, ~cluster, ~cluster2, ~cluster3,
'A', 'B', 0, 'c1','p1','s5',
'A', 'B', 0, 'c1','p1','s5',
'A', 'B', 0, 'c1','p1','s5',
'A', 'C', 0, 'c1','p1','s5',
'A', 'C', 0, 'c1','p1','s5',
'A', 'C', 0, 'c1','p1','s5',
'B', 'C', 0, 'c1','p1','s5',
'B', 'C', 1, 'c1','p1','s5',
'B', 'C', 1, 'c1','p1','s4',
'A', 'B', 0, 'c2','p1','s4',
'A', 'B', 1, 'c2','p1','s4',
'A', 'B', 1, 'c2','p1','s4',
'A', 'C', 0, 'c2','p2','s4',
'A', 'C', 1, 'c2','p2','s4',
'A', 'C', 0, 'c2','p2','s4',
'B', 'C', 0, 'c2','p2','s4',
'B', 'C', 1, 'c2','p2','s4',
'B', 'C', 1, 'c2','p2','s3',
'A', 'B', 0, 'c3','p2','s3',
'A', 'B', 0, 'c3','p2','s3',
'A', 'B', 1, 'c3','p2','s3',
'A', 'C', 1, 'c3','p2','s3',
'A', 'C', 1, 'c3','p3','s3',
'A', 'C', 1, 'c3','p3','s3',
'B', 'C', 0, 'c3','p3','s3',
'B', 'C', 0, 'c3','p3','s2',
'B', 'C', 1, 'c3','p3','s2',
'A', 'B', 0, 'c4','p3','s2',
'A', 'B', 0, 'c4','p3','s2',
'A', 'B', 1, 'c4','p3','s2',
'A', 'C', 0, 'c4','p3','s2',
'A', 'C', 1, 'c4','p3','s1',
'A', 'C', 1, 'c4','p3','s1',
'B', 'C', 0, 'c4','p3','s1',
'B', 'C', 1, 'c4','p3','s1',
'B', 'C', 1, 'c4','p3','s1'
)
test_btU<-as.data.frame(test_btU)
save(test_btU, file = "inst/testdata/test_btU.rda")
test_davidsonU<-tibble::tribble(~player0, ~player1, ~y, ~cluster, ~cluster2, ~cluster3,
'A', 'B', 0, 'c1','p1','s5',
'A', 'B', 0, 'c1','p1','s5',
'A', 'B', 2, 'c1','p1','s5',
'A', 'C', 0, 'c1','p1','s5',
'A', 'C', 0, 'c1','p1','s5',
'A', 'C', 0, 'c1','p1','s5',
'B', 'C', 2, 'c1','p1','s5',
'B', 'C', 1, 'c1','p1','s5',
'B', 'C', 1, 'c1','p1','s4',
'A', 'B', 0, 'c2','p1','s4',
'A', 'B', 1, 'c2','p1','s4',
'A', 'B', 1, 'c2','p1','s4',
'A', 'C', 2, 'c2','p2','s4',
'A', 'C', 1, 'c2','p2','s4',
'A', 'C', 2, 'c2','p2','s4',
'B', 'C', 0, 'c2','p2','s4',
'B', 'C', 1, 'c2','p2','s4',
'B', 'C', 1, 'c2','p2','s3',
'A', 'B', 0, 'c3','p2','s3',
'A', 'B', 0, 'c3','p2','s3',
'A', 'B', 2, 'c3','p2','s3',
'A', 'C', 2, 'c3','p2','s3',
'A', 'C', 1, 'c3','p3','s3',
'A', 'C', 1, 'c3','p3','s3',
'B', 'C', 0, 'c3','p3','s3',
'B', 'C', 2, 'c3','p3','s2',
'B', 'C', 1, 'c3','p3','s2',
'A', 'B', 0, 'c4','p3','s2',
'A', 'B', 2, 'c4','p3','s2',
'A', 'B', 1, 'c4','p3','s2',
'A', 'C', 0, 'c4','p3','s2',
'A', 'C', 1, 'c4','p3','s1',
'A', 'C', 1, 'c4','p3','s1',
'B', 'C', 2, 'c4','p3','s1',
'B', 'C', 1, 'c4','p3','s1',
'B', 'C', 1, 'c4','p3','s1')
test_davidsonU<-as.data.frame(test_davidsonU)
save(test_davidsonU, file = "inst/testdata/test_davidsonU.rda")
m2 <- bpc(
data = test_btU,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
cluster = c('cluster', 'cluster2'),
model_type = 'bt-U',
solve_ties = 'random',
win_score = 'higher',
iter = 2000,
warmup = 500,
show_chain_messages = F,
seed=8484
)
m2
m3 <- bpc(
data = test_btU,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
cluster = c('cluster', 'cluster2','cluster3'),
model_type = 'bt-U',
solve_ties = 'random',
win_score = 'higher',
iter = 2000,
warmup = 500,
show_chain_messages = F,
seed=8484
)
m3
summary(m3)
load_all()
summary(m3)
load_all()
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/bt.stan")
rstan:::rstudio_stanc("inst/stan/btpredict.stan")
test_bt_subject<-tibble::tribble(~player0, ~player1, ~y, ~SPred1, ~SPred2, ~SPred3, ~Subject
'A', 'B', 0, 1, 2, 3, 1,
'A', 'B', 0, 4, 0, 2, 2,
'A', 'B', 1, 2, 3, 3, 3,
'A', 'C', 0, 1, 2, 3, 1,
'A', 'C', 0, 4, 0, 2, 2,
'A', 'C', 0, 2, 3, 3, 3,
'B', 'C', 0, 1, 2, 3, 1,
'B', 'C', 0, 4, 0, 2, 2,
'B', 'C', 1, 2, 3, 3, 3)
test_bt_subject<-tibble::tribble(~player0, ~player1, ~y, ~SPred1, ~SPred2, ~SPred3, ~Subject,
'A', 'B', 0, 1, 2, 3, 1,
'A', 'B', 0, 4, 0, 2, 2,
'A', 'B', 1, 2, 3, 3, 3,
'A', 'C', 0, 1, 2, 3, 1,
'A', 'C', 0, 4, 0, 2, 2,
'A', 'C', 0, 2, 3, 3, 3,
'B', 'C', 0, 1, 2, 3, 1,
'B', 'C', 0, 4, 0, 2, 2,
'B', 'C', 1, 2, 3, 3, 3)
test_bt_subject<-as.data.frame(test_bt_subject)
save(test_bt_subject, file = "inst/testdata/test_bt_subject.rda")
library(devtools)
clean_dll()
document()
library(devtools)
load_all()
test_bt <- load_testdata('test_bt-subjects')
test_bt_subjects <- load_testdata('test_bt-subjects')
test_bt_subject <- load_testdata('test_bt_subject')
m1 <- bpc(
data = test_bt_subject,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
model_type = 'bt-subjectpredictors',
subject_predictors = c('SPred1', 'SPred2', 'SPred3'),
solve_ties = 'random',
win_score = 'higher',
iter = 1000,
warmup = 300,
show_chain_messages = F,
seed = 8484
)
m1
load_all()
m1
load_all()
m1
m1$subject_predictors_lookup_table
load_all()
m1 <- bpc(
data = test_bt_subject,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
model_type = 'bt-subjectpredictors',
subject_predictors = c('SPred1', 'SPred2', 'SPred3'),
solve_ties = 'random',
win_score = 'higher',
iter = 1000,
warmup = 300,
show_chain_messages = F,
seed = 8484
)
m1
load_all()
m1
m1 <- bpc(
data = test_bt_subject,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
model_type = 'bt-subjectpredictors',
subject_predictors = c('SPred1', 'SPred2', 'SPred3'),
solve_ties = 'random',
win_score = 'higher',
iter = 1000,
warmup = 300,
show_chain_messages = F,
seed = 8484
)
load_all()
m1 <- bpc(
data = test_bt_subject,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
model_type = 'bt-subjectpredictors',
subject_predictors = c('SPred1', 'SPred2', 'SPred3'),
solve_ties = 'random',
win_score = 'higher',
iter = 1000,
warmup = 300,
show_chain_messages = F,
seed = 8484
)
m1
m1
rstan:::rstudio_stanc("inst/stan/btpredict.stan")
load_all()
m1
summary(m1)
test_bt <- load_testdata('test_bt')
m1 <- bpc(
data = test_bt,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
model_type = 'bt',
solve_ties = 'random',
win_score = 'higher',
iter = 1000,
warmup = 300,
show_chain_messages = F,
seed = 8484
)
load_all()
m1 <- bpc(
data = test_bt,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
model_type = 'bt',
solve_ties = 'random',
win_score = 'higher',
iter = 1000,
warmup = 300,
show_chain_messages = F,
seed = 8484
)
m1
summary(m1)
test()
test_bt<-load_testdata('test_bt')
test_btU<-load_testdata('test_btU')
lookup_table<-create_index_lookuptable(test_bt, player0 = 'player0',player1 = 'player1')
result <- c('lambda[A]', 'lambda[B]', 'lambda[C]')
expect_equal(create_array_of_par_names(par='lambda',lookup_table),result)
lookup_table2<-create_index_lookuptable(test_btU, player0 = 'player0',player1 = 'player1')
cluster_lookup_table2<-create_index_cluster_lookuptable(test_btU, cluster='cluster')
result2 <- c('U[A,c1]', 'U[B,c1]', 'U[C,c1]','U[A,c2]', 'U[B,c2]', 'U[C,c2]','U[A,c3]', 'U[B,c3]', 'U[C,c3]','U[A,c4]', 'U[B,c4]', 'U[C,c4]')
expect_equal(create_array_of_par_names(par='U',lookup_table=lookup_table2, cluster_lookup_table = cluster_lookup_table2),result2)
create_array_of_par_names(par='U',lookup_table=lookup_table2, cluster_lookup_table = cluster_lookup_table2)
lookup_table2
cluster_lookup_table2
result2 <- c('U1[A,c1]', 'U1[B,c1]', 'U1[C,c1]','U1[A,c2]', 'U1[B,c2]', 'U1[C,c2]','U1[A,c3]', 'U1[B,c3]', 'U1[C,c3]','U1[A,c4]', 'U1[B,c4]', 'U1[C,c4]')
expect_equal(create_array_of_par_names(par='U1',lookup_table=lookup_table2, cluster_lookup_table = cluster_lookup_table2),result2)
load_all()
expect_equal(create_array_of_par_names(par='U1',lookup_table=lookup_table2, cluster_lookup_table = cluster_lookup_table2),result2)
load_all()
expect_equal(create_array_of_par_names(par='U1',lookup_table=lookup_table2, cluster_lookup_table = cluster_lookup_table2),result2)
load_all()
expect_equal(create_array_of_par_names(par='U1',lookup_table=lookup_table2, cluster_lookup_table = cluster_lookup_table2),result2)
cluster_lookup_table2<-create_index_cluster_lookuptable(test_btU, cluster=c('cluster'))
result2 <- c('U1[A,c1]', 'U1[B,c1]', 'U1[C,c1]','U1[A,c2]', 'U1[B,c2]', 'U1[C,c2]','U1[A,c3]', 'U1[B,c3]', 'U1[C,c3]','U1[A,c4]', 'U1[B,c4]', 'U1[C,c4]')
expect_equal(create_array_of_par_names(par='U1',lookup_table=lookup_table2, cluster_lookup_table = cluster_lookup_table2),result2)
result2 <- c('U1[A,c1]', 'U1[B,c1]', 'U1[C,c1]','U1[A,c2]', 'U1[B,c2]', 'U1[C,c2]','U1[A,c3]', 'U1[B,c3]', 'U1[C,c3]','U1[A,c4]', 'U1[B,c4]', 'U1[C,c4]')
expect_equal(create_array_of_par_names(par='U1',lookup_table=lookup_table2, cluster_lookup_table = list(cluster_lookup_table2)) ,result2)
test_bt_subject<-load_testdata('test_bt_subject')
lookup_table3<-create_index_lookuptable(test_bt_subject, player0 = 'player0', player1 = 'player1')
lookup_table3<-create_index_lookuptable(test_bt_subject, player0 = 'player0', player1 = 'player1')
subject_predictor_lookuptable<-create_subject_predictor_lookuptable(subject_predictors = c('SPred1', 'SPred2', 'SPred3'))
result3 <- c('S[A,SPred1]', 'S[B,SPred1]', 'S[C,SPred1]','S[A,SPred2]', 'S[B,SPred2]', 'S[C,SPred2]','S[A,SPred3]', 'S[B,SPred3]', 'S[C,SPred3]')
expect_equal(create_array_of_par_names(par='S',lookup_table=lookup_table2, subject_predictor_lookuptable =subject_predictor_lookuptable) ,result3)
expect_equal(create_array_of_par_names(par='S',lookup_table=lookup_table2, subject_predictor_lookup_table =subject_predictor_lookuptable) ,result3)
expect_equal(create_array_of_par_names(par='S',lookup_table=lookup_table3, subject_predictor_lookup_table =subject_predictor_lookuptable) ,result3)
load_all()
expect_equal(create_array_of_par_names(par='S',lookup_table=lookup_table3, subject_predictors_lookup_table =subject_predictor_lookuptable) ,result3)
create_array_of_par_names(par='S',lookup_table=lookup_table3, subject_predictors_lookup_table =subject_predictor_lookuptable)
test()
load_all()
install()
check()
.Last.error.trace
check()
library(devtools)
check()
document()
document()
check(run_dont_test = F)
load_all()
test_btU <- load_testdata('test_btU')
m1 <- bpc(
data = test_btU,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
cluster = c('cluster'),
model_type = 'bt-U',
solve_ties = 'random',
win_score = 'higher',
iter = 2000,
warmup = 500,
show_chain_messages = F,
seed=8484
)
m1
predict(m1,newdata = test_btU)
load_all()
predict(m1,newdata = test_btU)
check()
install()
Yes
install()
devtools::document()
document()
libra
library(devtools)
document()
install()
install()
document()
install()
load_all()
test_btU <- load_testdata('test_btU')
m1 <- bpc(
data = test_btU,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
cluster = c('cluster'),
model_type = 'bt-U',
solve_ties = 'random',
win_score = 'higher',
iter = 2000,
warmup = 500,
show_chain_messages = F,
seed=8484
)
m1
get_probabilities_df(m1, model_type = 'bt')
load_all()
get_probabilities_df(m1, model_type = 'bt')
load_all()
get_probabilities_df(m1, model_type = 'bt')
load_all()
get_probabilities_df(m1, model_type = 'bt')
load_all()
get_probabilities_df(m1, model_type = 'bt')
load_all()
get_probabilities_df(m1, model_type = 'bt')
load_all()
get_probabilities_df(m1, model_type = 'bt')$Table
get_probabilities_df(m1, model_type = 'bt')
load_all()
document()
install()
m1
get_probabilities_df(m1, model_type = 'bt')
get_probabilities_df(m1, model_type = 'bt-U')
test_btU
t<-data.frame(player0='A', player1='B')
get_probabilities_df(m1, newdata=t, model_type = 'bt')
t<-data.frame(player0=c('A','A'), player1=c('B','B')
t<-data.frame(player0=c('A','A'), player1=c('B','B'))
t<-data.frame(player0=c('A','A'), player1=c('B','B'))
get_probabilities_df(m1, newdata=t, model_type = 'bt')
get_probabilities_df(m1, newdata=t, model_type = 'bt', n=1000)
m1
library(devtools)
document()
check()
check()
install()
library(devtools)
install()
test_bt <- load_testdata('test_bt')
load_all()
test_bt <- load_testdata('test_bt')
m1 <- bpc(
data = test_bt,
player0 = 'player0',
player1 = 'player1',
result_column = 'y',
model_type = 'bt',
solve_ties = 'random',
win_score = 'higher',
iter = 1000,
warmup = 300,
show_chain_messages = F,
seed = 8484
)
m1
summary(m1)
document()
library(devtools)
build_readme()
check()
build_readme()
library(devtools)
build_readme()
build_manual()
